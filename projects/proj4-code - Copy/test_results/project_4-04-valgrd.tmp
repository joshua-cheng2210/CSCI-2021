==873== Memcheck, a memory error detector
==873== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==873== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==873== Command: ./test_el_malloc Single\ Allocate/Free
==873== Parent PID: 859
==873== 
==873== Invalid read of size 8
==873==    at 0x10AFA1: el_block_below (el_malloc.c:102)
==873==    by 0x10B62A: el_merge_block_with_above (el_malloc.c:408)
==873==    by 0x10B61E: el_merge_block_with_above (el_malloc.c:405)
==873==    by 0x10B6B6: el_free (el_malloc.c:428)
==873==    by 0x109A1E: main (test_el_malloc.c:143)
==873==  Address 0x5ffffffffff8 is not stack'd, malloc'd or (recently) free'd
==873== 
==873== 
==873== Process terminating with default action of signal 11 (SIGSEGV)
==873==  Access not within mapped region at address 0x5FFFFFFFFFF8
==873==    at 0x10AFA1: el_block_below (el_malloc.c:102)
==873==    by 0x10B62A: el_merge_block_with_above (el_malloc.c:408)
==873==    by 0x10B61E: el_merge_block_with_above (el_malloc.c:405)
==873==    by 0x10B6B6: el_free (el_malloc.c:428)
==873==    by 0x109A1E: main (test_el_malloc.c:143)
==873==  If you believe this happened as a result of a stack
==873==  overflow in your program's main thread (unlikely but
==873==  possible), you can try to increase the size of the
==873==  main thread stack using the --main-stacksize= flag.
==873==  The main thread stack size used in this run was 8388608.
==873== 
==873== HEAP SUMMARY:
==873==     in use at exit: 0 bytes in 0 blocks
==873==   total heap usage: 1 allocs, 1 frees, 1,024 bytes allocated
==873== 
==873== All heap blocks were freed -- no leaks are possible
==873== 
==873== For lists of detected and suppressed errors, rerun with: -s
==873== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
